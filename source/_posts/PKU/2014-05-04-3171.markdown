---
layout: post
title: "PKU 3171 Cleaning Shifts"
date: 2014-05-04 17:44:54 +0900
comments: true
category: PKU
tags: [segment-tree]
---

[Cleaning Shifts](http://poj.org/problem?id=3171)

#### 問題概要

****

[M, E]の時間全てをカバーするように牛を働かせるとき, コストの最小を求めよ.<br>
牛は働く時間[Si, Ti]とそのときのコストViがそれぞれ決まっている.<br>
全てカバーできない時は-1を出力する.


#### 解法

****

DP<br>
とりあえず閉区間きもちわるいのですべて半開区間に直す(好みの問題, ついでに全部からM引く).
各牛について, 開始時刻が早い順に<br>
dp[i] := 時刻iまで掃除させるときの最小コスト<br>
更新式は以下のようになる.

```
for i in [0, N)
    for j in [Si, Ti)
        dp[Ti] = min(dp[Ti], dp[j] + Vi)
```

しかしこれでは明らかにTLE.<br>
jについてのfor文をみると, [Si, Ti) のdp配列の最小値を持ってくればfor文回さなくても更新できることがわかる.<br>
よってdp配列をSegment Treeで実装すれば全体の計算量はO(N log E)になって嬉しい.<br>
あとコストの最大がNSぐらいになってintだとやばそうなのでlong longにした.

#### コード

****

{% include_code PKU/3171.cpp %}

