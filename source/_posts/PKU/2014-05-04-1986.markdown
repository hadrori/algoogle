---
layout: post
title: "PKU 1986 Distance Queries"
date: 2014-05-04 15:39:09 +0900
comments: true
category: PKU
tags: [binary-indexed-tree, lowest-common-ancestor, segment-tree]
---

[Distance Queries](http://poj.org/problem?id=1986)

#### 問題概要

****

全域木になるようなグラフが与えられ, 各枝には重みが付いている.<br>
頂点数はN(<=40,000)<br>
そのとき, K(<=10,000)回クエリが与えられる. 各クエリでは2点が与えられるのでその2点の木の上での距離を答えよ.<br>


#### 解法

****

愚直にやると, 各クエリでO(N)かかるので全体でO(NK)で話にならない.<br>
木の上での2点の距離は2点のLCAを仲介にして距離を求めることができる.<br>
DFSで頂点を全てみるときの順番(戻るときも含める)に各点のDFSの深さを保存しておく.<br>
そうすると2点の間の深さの最小を取ってくればそれがLCAになる.<br>
明らかにRMQなのでSegment Treeで実装する.<br>
<br>
また, 各点からその各祖先までの距離もそのDFSの順に求める. 頂点に入るときに辺の重みを足し, 戻るときに引けばBITで区間の距離の総和が出せる(ただし各祖先までの距離しか出せない).<br>
よって2点の距離はそのLCAを介することで求められる.<br>
<br>
DFSの順番について, 例えば以下の図のように探索するとき頂点の列は<br>
1 2 5 2 6 2 1 3 1 4 1<br>
となり, それに対応する深さの列は<br>
0 1 2 1 2 0 1 0 1 0<br>
となり, 各頂点について頂点に入るときの列の場所を覚えておけばその区間を見るだけでよいことがわかる<br>

![](/images/pku1986-01.png)

#### コード

****

{% include_code PKU/1986.cpp %}

