---
layout: post
title: "JOI 春合宿 2010 Highway"
date: 2014-09-19 22:36:03 +0900
comments: true
category: JOI
tags: [lowest-common-ancestor, binary-indexed-tree]
---

[Highway](http://joisc2010.contest.atcoder.jp/tasks/joisc2010_highway)

#### 問題概要

****

木が与えられる.  
ノードの番号が小さい方から大きい方へいく時を上りといい, 逆の時を下りという.  
以下のクエリを処理しろ.  

* ある辺の上りと下りにかかる時間の変更
* ある2頂点x, yのxからyにいくときにかかる時間の総和の出力

#### 解法

****

根付き木として考える.  
頂点uから頂点vまでの距離を求めたい.  
上りと下りの区別がないとして考える.  
上りと下りの区別がないとき, 2頂点間の距離はその最小共通祖先wまでの距離の和と考えるとよい.  
こうするとオイラーツアーしてやれば区間に部分木が入るので, 辺を降りるときに足して昇るときに引いてやればBITで各頂点からその子孫までの距離をO(log n)で得ることができる.  
辺の更新はBITで対応する位置に現在の値との差分を足してやれば良い.  
  
上りと下りの区別がある場合  
パスの向きを考えるとu->w->vと進むことになることが分かる.  
もっと詳しく見ると  
u->wが根に向かって進む方向  
w->vが葉に向かって進む方向  
この2種類しかないので上りと下りをこれに対応させて2本のBIT, つまり根に向かう方向の距離を求めるのと葉に向かう方向の距離を求めるBITをそれぞれ別に用意すれば良い.


#### コード

****

{% include_code JOI/2010/highway.cpp %}
