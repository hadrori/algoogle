---
layout: post
title: "AOJ 2597 Color the Map Extreme"
date: 2015-12-14 00:32:26 +0900
comments: true
category: AOJ
tags: [geometry, maximal-independent-set, aoj-icpc-advent-calendar-2015]
---

AOJ-ICPC Advent Calendar 2015の14日目の記事です．

[Color the Map Extreme](http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=2597)

#### 問題概要

****

平面上にn(<=35)個多角形がある．彩色数を求めよ．

#### 解法

****

幾何パートは辺同士で線分と点の距離が0になる個数と端点がくっついてるかでみてます．  

- 2個より多い: 辺がくっついてる  
- 2個で端点がくっついてない: 辺がくっついてる  
- それ以外: 辺がくっついてない  

グラフができたら彩色数を求めます．  
まず大前提として，できたグラフは平面グラフなので彩色数は最大でも4なので，グラフから極大独立集合を取ってきてそこの色を決めたら残りの部分は3色以下で塗れます．  
極大独立集合とは互いに隣り合わない頂点の集合(独立集合)のうち，これ以上頂点を追加できないものです．  
残ったグラフでは頂点がなければ0色，辺がなければ1色，2部グラフなら2色，それ以外なら3色とわかるので適当に塗っていけば何色で塗れるかわかります．  
つまり極大独立集合を全列挙して試せばグラフの彩色数がわかります．  
  
極大独立集合は貪欲にやっていけば求まりますが，列挙する場合は最小次数の頂点かその隣接する頂点を選ぶかでやるといい感じになります．  
もうちょっとだけ詳しく書こうとしたけどわかりづらくなったので擬似コード．詳しくはコード見て下さい(FCCPCのチームライブラリから取ってきたので僕が書いたわけではありませんが)．  
前提条件として，SとTは空，Vはグラフの頂点集合が入ってます．事後条件はTは全ての極大独立集合の集合．

```
set: S, T, V

func f
  if Vが空 then
    TにSを追加
  else then
    v = Vにある頂点のうち最小次数の頂点1つ
    Vからvとその近傍を取り除く(1)
    Sにvを入れる
    call f
    Sからvを取り除く
    Vに(1)で取り除いた頂点を戻す
    for w in Vにある頂点のうちvに隣接する頂点
      Vからwとその近傍を取り除く(2)
      Sにwを入れる
      call f
      Sからwを取り除く
      Vに(2)で取り除いた頂点を戻す
    end
  end
end
```

極大独立集合は最小の次数をkとしたとき (k+1)^(n/(k+1)) 個できる．これはk+1=eのとき最大になるが，kは整数なのでk+1=3の時が最大．  
1つの極大独立集合を見つけるのにO(n)なので，列挙の計算量はO(n3^(n/3))となります．  
ちなみにグラフによってはこのアルゴリズムは一部の極大独立集合を重複して列挙しますが，それを含めた計算量．  
  
極大独立集合を除いたグラフでの彩色数のチェックにはそれぞれO(n)かかるので，全体の計算量もO(n3^(n/3)) となります．  
35\*3^(35/3)は10^7ぐらいなので間に合います．

#### コード

****

{% include_code AOJ/2597.cpp %}
