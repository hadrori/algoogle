---
layout: post
title: "AOJ 2445 MinimumCostPath"
date: 2015-12-14 01:05:28 +0900
comments: true
category: AOJ
tags: [dp, aoj-icpc-advent-calendar-2015]
---

AOJ-ICPC Advent Calendar 2015の14日目の記事です．

[MinimumCostPath](http://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=2445)

#### 問題概要

****

n*nの2次元グリッドががある(n<=1,000,000)．  
m(<=50)個のマスが進入不可なとき，(1,1)から(n,n)までの最短ルートの個数をmod 1,000,000,009で求めよ．

#### 解法

****

まず右と上しか進めないときを考える．これは簡単で，以下の様なDPすればよい．  
dp\[i\] := i番目の障害物の場所に来る方法の総数  
更新はi番目の場所を(xi,yi)，(1,1)から(xi,yi)の矩形に含まれる障害物の番号の集合をSとすると  

{% math %}

dp[i] = {}_{x_i+y_i}C_{x_i}-\sum_{j \in S} dp[j]*{}_{x_i-x_j+y_i-y_j}C_{x_i-x_j}

{% endmath %}

ではどのようなときに最短ルートが遠回りせざるを得ないか考える．  
これはどのルートを選択しても，必ず遠回りになる必要があり，そのために遠回りが確定するまで経路を障害物で覆う必要がある(終端からも同様)．  
つまり，障害物が50個程度しかないのでグリッドの縁を駆使しても左下と右上の50\*50ぐらいの中ででしか遠回りは起こらない．  
このことを利用して，(1,1)からマンハッタン距離が50ぐらいのところを始点(もちろんその中で最短のものだけ)，(n,n)からマンハッタン距離が50ぐらいのところを終点としてその組合せで上のDPをして足し合わせればよい．  

#### コード

****

{% include_code AOJ/2445.cpp %}
