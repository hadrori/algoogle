---
layout: post
title: "ACM-ICPC Tokyo Regional 2014 G Flipping Parentheses"
date: 2014-10-24 03:06:45 +0900
comments: true
category: ICPC
tags: [segment-tree, binary-search]
---

[Flipping Parentheses](http://judge.u-aizu.ac.jp/onlinejudge/cdescription.jsp?cid=ICPCOOC2014&pid=G)

#### 問題概要

****

バランスのとれた括弧の列が与えられる.  
q個のクエリについてそれぞれ指定された場所の括弧を反転させ, 再びバランスのとれた状態にするために反転させるべき一番左の括弧を求めよ

#### 解法

****

開き括弧を+1, 閉じ括弧を-1とみる.  
その累積和を取ったとき, バランスのとれた括弧の列なら常に非負かつ最後に0になる.  
  
すでにクエリの括弧は反転させたとする.  
閉じ括弧を開き括弧に変える場合, 一番左の閉じ括弧に変えればよい(上の条件は常に満たされる).  
開き括弧を閉じ括弧に変える場合, 以降の最小値が2以上であるような一番左の場所を探す.  
これは2分探索をすればよい.  
  
区間の最小値はSegment-Treeを使えば良い.  
累積和の更新は区間に2もしくは-2を加える事でできる.  
区間に足し込むタイプのSegment-Treeは区間に一気に足した値保持することで大抵うまくいく.  
一番左の閉じ括弧はsetとかで持てばよいでしょう.

#### コード

****

{% include_code ICPC/2014/Tokyo/G.cpp %}
