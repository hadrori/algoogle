---
layout: post
title: "PA 2007 Barricades"
date: 2014-10-30T21:45:00+09:00
comments: true
category: PA
tags: [dp]
---

[Barricades](http://main.edu.pl/en/archive/pa/2007/bar)

#### 問題概要

****

N頂点の木がある.  
m個のクエリ(k)について以下を求める.  
k個の頂点の木ができるように辺を切断するときの最小の切断回数

#### 解法

****

木dp.  
適当な頂点を根とする木を考える.  
dp\[i\]\[j\] := 頂点iを根とする部分木でiを含むようなj個の頂点の木にするための最小の切断回数  
これを予め求めておけば各クエリについてO(N)で答えられる.  
  
各頂点のdp表は以下のようにして葉から更新すればよい.  
頂点vのdp表を埋めたいとする.  
初め頂点vだけの木であると考え, 子の部分木を順に付け加えていく.  
頂点vだけのとき  
dp\[v\]\[1\] = 0  
子uを付け加えるとき, それまでのdp\[v\]をprev\[v\]とする(コードではdp\[n\]).  
dp\[v\]は現在の部分木の頂点数+1のサイズを持ち, infで埋められてるとする.  
iがprev\[v\]の大きさ以下のとき  
aを\[1,i)の範囲でi-aがu以下の部分木の大きさ以下の数として  
dp\[v\]\[i\] = min(prev\[v\]\[i\]+1, prev\[v\]\[a\]+dp\[u\]\[i-a\])  
ここでprev\[v\]\[i\]+1は今回の子を完全に無視する場合に当たる.  
iがprev\[v\]より大きいときは  
dp\[v\]\[i\] = min(prev\[v\]\[a\]+dp\[u\]\[i-a\])  
  
この更新の計算量はO(N^2)になる.

#### コード

****

{{< includeCode "/PA/2007/barricades.cpp" "cpp" >}}
